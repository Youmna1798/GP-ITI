# Generated by Django 3.2.12 on 2022-03-05 22:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=256, verbose_name='area name')),
                ('delivery_fees', models.PositiveIntegerField(verbose_name='delivery fees')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, default=1, validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('code', models.BigAutoField(help_text='primary key for product', primary_key=True, serialize=False, verbose_name='product code')),
                ('name', models.CharField(db_index=True, max_length=128, verbose_name='product name')),
                ('description', models.TextField(db_index=True, verbose_name='product description')),
                ('price', models.PositiveIntegerField(verbose_name='product price')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=64, null=True, verbose_name='product color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(choices=[(1, 'lowest'), (2, 'low'), (3, 'medium'), (4, 'high'), (5, 'highest')], verbose_name='product rating')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='user comment')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductColorSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='available stock for this color and size of the product')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='store.productcolor')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.size')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColorImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='product image color')),
                ('product_color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.productcolor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('name', ''), _negated=True), name='product_name_constraint'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='store.productcolorsize'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='store.order'),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='store.deliveryarea'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='deliveryarea',
            constraint=models.CheckConstraint(check=models.Q(('area', ''), _negated=True), name='deliveryarea_area_constraint'),
        ),
        migrations.AddConstraint(
            model_name='rating',
            constraint=models.UniqueConstraint(fields=('product', 'user'), name='rating_product_user_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='productcolorsize',
            constraint=models.UniqueConstraint(fields=('color', 'size'), name='productcolorsize_color_size_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='productcolor',
            constraint=models.CheckConstraint(check=models.Q(('color', ''), _negated=True), name='productcolor_color_constraint'),
        ),
        migrations.AddConstraint(
            model_name='productcolor',
            constraint=models.UniqueConstraint(fields=('product', 'color'), name='productcolor_product_color_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'item'), name='orderitem_order_item_unique_constraint'),
        ),
    ]
